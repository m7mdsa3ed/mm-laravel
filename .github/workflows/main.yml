name: Push

env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

on:
  workflow_dispatch:
  push:
    branches: [ main ]

jobs:
  Laravel-Pint-Check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: "Laravel Pint Check"
        uses: aglipanci/laravel-pint-action@2.0.0
        with:
          testMode: true
          configPath: "pint.json"
          onlyDirty: true

  Deploy-SSH:
    runs-on: ubuntu-latest
    needs: Laravel-Pint-Check
    steps:
      - uses: actions/checkout@v2

      - name: Run a one-line script
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.PORT }}
          script: ${{ secrets.ONE_LINE_SCRIPT }}

  Deploy-Vercel:
    runs-on: ubuntu-latest
    needs: Laravel-Pint-Check
    steps:
      - uses: actions/checkout@v2
      - name: Cache Vercel CLI
        id: cache-vercel-cli
        uses: actions/cache@v3
        env:
          cache-name: cache-vercel-cli
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: Install Vercel CLI
        run: npm install --global vercel@latest
      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}
      - name: Deploy Project Artifacts to Vercel
        run: vercel deploy --prod --token=${{ secrets.VERCEL_TOKEN }}
